\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Curien's call-by-name calculus of closures \nobreakspace {}\cite {curien1991abstract}}}{8}{figure.2.1}% 
\contentsline {figure}{\numberline {2.2}{\ignorespaces Evaluation strategy and environment structure design space. Each acronym refers to an existing implementation. Some implementations use multiple environment representations.}}{14}{figure.2.2}% 
\contentsline {figure}{\numberline {2.3}{\ignorespaces Cactus calculus syntax and semantics.}}{28}{figure.2.3}% 
\contentsline {figure}{\numberline {2.4}{\ignorespaces Ariola et. al's Operational Semantics}}{29}{figure.2.4}% 
\contentsline {figure}{\numberline {2.5}{\ignorespaces Syntax and semantics of the $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}}$ machine.}}{30}{figure.2.5}% 
\contentsline {figure}{\numberline {2.6}{\ignorespaces $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}}$ machine example. Evaluation of $(\lambda (\lambda 0\tmspace +\thickmuskip {.2777em}1)\tmspace +\thickmuskip {.2777em}\lambda 0\tmspace +\thickmuskip {.2777em}1)\tmspace +\thickmuskip {.2777em}((\lambda 0)\tmspace +\thickmuskip {.2777em}\lambda 0)$}}{31}{figure.2.6}% 
\contentsline {figure}{\numberline {2.7}{\ignorespaces $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}}$ machine compilation scheme. $C$ compiles a sequence of instructions from a term. The $label$ represents a code label: each instruction is given a unique label. The $:$ operator denotes prepending an item to a sequence and $\ensuremath {+\tmspace -\thinmuskip {.1667em}\tmspace -\thinmuskip {.1667em}\tmspace -\thinmuskip {.1667em}\tmspace -\thinmuskip {.1667em}+\tmspace +\thinmuskip {.1667em}}$ denotes concatenating two sequences.}}{32}{figure.2.7}% 
\contentsline {figure}{\numberline {2.8}{\ignorespaces Extensions to the syntax and semantics of the $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}}$ machine.}}{32}{figure.2.8}% 
\contentsline {figure}{\numberline {2.9}{\ignorespaces Description of Benchmarks}}{33}{figure.2.9}% 
\contentsline {figure}{\numberline {2.10}{\ignorespaces Machine Literals Benchmark Results. Measurement is wall clock time, units are seconds. Times averaged over 5 runs.}}{33}{figure.2.10}% 
\contentsline {figure}{\numberline {2.11}{\ignorespaces Church Numeral Benchmark Results. Measurement is wall clock time, units are seconds. Times averaged over 5 runs.}}{34}{figure.2.11}% 
\contentsline {figure}{\numberline {2.12}{\ignorespaces Church Numeral Exponentiation Benchmark Results. Measurement is wall clock time, units are seconds. Times averaged over 5 runs.}}{34}{figure.2.12}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Big step $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}} \mskip 4mu$syntax and semantics (call-by-need)}}{42}{figure.3.1}% 
\contentsline {figure}{\numberline {3.2}{\ignorespaces Curien's call-by-name calculus of closures}}{45}{figure.3.2}% 
\contentsline {figure}{\numberline {3.3}{\ignorespaces Big step call-by-name $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}} \mskip 4mu$syntax and semantics}}{46}{figure.3.3}% 
\contentsline {figure}{\numberline {3.4}{\ignorespaces Syntax and semantics of the $\mathcal {\mathcal {C} \mskip -4mu \mathcal {E}} \mskip 4mu$machine}}{47}{figure.3.4}% 
\contentsline {figure}{\numberline {3.5}{\ignorespaces Instruction Machine Syntax}}{50}{figure.3.5}% 
\contentsline {figure}{\numberline {3.6}{\ignorespaces Instruction Machine Semantics}}{63}{figure.3.6}% 
\contentsline {figure}{\numberline {3.7}{\ignorespaces Compiler Definition}}{64}{figure.3.7}% 
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
